# --- Libraries ---
library(readxl)
library(dplyr)
library(tidyr)
library(broom)
library(quantreg)

# --- File ---
file_path <- "C:/Users/USER/Desktop/Projects/ECHO-6MW/Second set/Dataset_TTEand6MWD.xlsx"

# --- Categorical predictors ---
cat_vars <- c("lv_syst_dysfxn_der", "ph_prob_der", "dd", "valve_abn_der")

# ---------- Helper: Median quantile regression for categorical predictors ----------
run_models_qr_cat <- function(df, outcome, preds, model_adjustments, tau = 0.5) {
  out <- data.frame(matrix(NA, nrow = length(model_adjustments), ncol = length(preds)))
  rownames(out) <- names(model_adjustments)
  colnames(out) <- preds
  
  for (model_name in names(model_adjustments)) {
    adjusters <- model_adjustments[[model_name]]
    
    for (var in preds) {
      vars_needed <- c(outcome, var, adjusters)
      subdat <- df %>%
        dplyr::select(dplyr::all_of(vars_needed)) %>%
        tidyr::drop_na() %>%
        droplevels()
      
      # relevel predictor so "0" is reference (if present)
      if (is.factor(subdat[[var]]) && nlevels(subdat[[var]]) >= 2) {
        if ("0" %in% levels(subdat[[var]])) subdat[[var]] <- relevel(subdat[[var]], ref = "0")
      }
      
      # Checks
      ok_outcome <- outcome %in% names(subdat) &&
        is.numeric(subdat[[outcome]]) &&
        length(unique(subdat[[outcome]])) > 1
      ok_predict <- var %in% names(subdat) &&
        is.factor(subdat[[var]]) &&
        nlevels(subdat[[var]]) >= 2
      if (!ok_outcome || !ok_predict || nrow(subdat) < 5) {
        out[model_name, var] <- "NA"; next
      }
      
      # drop adjusters with no variation
      valid_adj <- if (length(adjusters)) {
        adjusters[sapply(adjusters, function(x) {
          obj <- subdat[[x]]
          if (is.factor(obj)) nlevels(obj) >= 2 else length(unique(obj)) > 1
        })]
      } else character(0)
      
      # formula
      fml <- if (length(valid_adj) == 0) {
        as.formula(paste(outcome, "~", var))
      } else {
        as.formula(paste(outcome, "~", var, "+", paste(valid_adj, collapse = " + ")))
      }
      
      # fit quantile regression (median)
      fit <- tryCatch(rq(fml, tau = tau, data = subdat), error = function(e) NULL)
      if (is.null(fit)) { out[model_name, var] <- "NA"; next }
      
      # bootstrap SEs
      tt <- tryCatch(summary(fit, se = "boot", R = 200), error = function(e) NULL)
      if (is.null(tt)) { out[model_name, var] <- "NA"; next }
      
      # collect rows for this predictor
      rows <- tt$coefficients[grep(paste0("^", var), rownames(tt$coefficients)), , drop = FALSE]
      
      if (nrow(rows) == 0) {
        out[model_name, var] <- "NA"
      } else if (nrow(rows) == 1) {
        est <- rows[1, 1]; pval <- rows[1, 4]
        out[model_name, var] <- sprintf("%.3f, %.3f", est, pval)
      } else {
        parts <- apply(rows, 1, function(r) sprintf("%.3f, %.3f", r[1], r[4]))
        lvls <- sub(paste0("^", var), "", rownames(rows))
        out[model_name, var] <- paste(paste0(lvls, ": ", parts), collapse = "; ")
      }
    }
  }
  out
}

# ---------- Panel prep ----------
prep_all <- function(path) {
  read_excel(path) %>%
    mutate(
      symptom_score_1 = suppressWarnings(as.numeric(symptom_score_1)),
      across(all_of(cat_vars), ~ as.factor(.)),
      ph_prob_der     = { f <- ph_prob_der;     if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      dd              = { f <- dd;              if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      valve_abn_der   = { f <- valve_abn_der;   if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      lv_syst_dysfxn_der = { f <- lv_syst_dysfxn_der; if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      sex = as.factor(sex),
      race_id_der = as.factor(race_id_der),
      bmi_cat_tri_der = as.factor(bmi_cat_tri_der),
      ever_smok_stat_der = as.factor(ever_smok_stat_der),
      ever_ivdu_stat_der = as.factor(ever_ivdu_stat_der),
      g9_hepatitis_c = as.factor(g9_hepatitis_c),
      anemia_der = as.factor(anemia_der),
      a1_hiv_st = as.factor(a1_hiv_st),
      post_old_gli_der = as.factor(post_old_gli_der),
      dlco_stat_binary_gli_pft_1_der = as.factor(dlco_stat_binary_gli_pft_1_der),
      respinfx_der = as.factor(respinfx_der)
    ) %>% droplevels()
}

prep_hiv0 <- function(path) {
  read_excel(path) %>% filter(a1_hiv_st == 0) %>%
    mutate(
      symptom_score_1 = suppressWarnings(as.numeric(symptom_score_1)),
      across(all_of(cat_vars), ~ as.factor(.)),
      ph_prob_der     = { f <- ph_prob_der;     if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      dd              = { f <- dd;              if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      valve_abn_der   = { f <- valve_abn_der;   if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      lv_syst_dysfxn_der = { f <- lv_syst_dysfxn_der; if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      sex = as.factor(sex),
      race_id_der = as.factor(race_id_der),
      bmi_cat_tri_der = as.factor(bmi_cat_tri_der),
      ever_smok_stat_der = as.factor(ever_smok_stat_der),
      ever_ivdu_stat_der = as.factor(ever_ivdu_stat_der),
      anemia_der = as.factor(anemia_der),
      post_old_gli_der = as.factor(post_old_gli_der),
      dlco_stat_binary_gli_pft_1_der = as.factor(dlco_stat_binary_gli_pft_1_der)
    ) %>% droplevels()
}

prep_hiv1 <- function(path) {
  read_excel(path) %>% filter(a1_hiv_st == 1) %>%
    mutate(
      symptom_score_1 = suppressWarnings(as.numeric(symptom_score_1)),
      across(all_of(cat_vars), ~ as.factor(.)),
      ph_prob_der     = { f <- ph_prob_der;     if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      dd              = { f <- dd;              if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      valve_abn_der   = { f <- valve_abn_der;   if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      lv_syst_dysfxn_der = { f <- lv_syst_dysfxn_der; if ("0" %in% levels(f)) relevel(f, ref = "0") else f },
      sex = as.factor(sex),
      race_id_der = as.factor(race_id_der),
      bmi_cat_tri_der = as.factor(bmi_cat_tri_der),
      ever_smok_stat_der = as.factor(ever_smok_stat_der),
      ever_ivdu_stat_der = as.factor(ever_ivdu_stat_der),
      g9_hepatitis_c = as.factor(g9_hepatitis_c),
      anemia_der = as.factor(anemia_der),
      post_old_gli_der = as.factor(post_old_gli_der),
      dlco_stat_binary_gli_pft_1_der = as.factor(dlco_stat_binary_gli_pft_1_der),
      time_living_with_hiv_der = suppressWarnings(as.numeric(time_living_with_hiv_der)),
      cd4 = suppressWarnings(as.numeric(cd4)),
      vl_detectable_der = as.factor(vl_detectable_der),
      respinfx_der = as.factor(respinfx_der)
    ) %>% droplevels()
}

# =========================
# ALL participants (Models 0–3)
# =========================
data_all <- prep_all(file_path)
model_adjustments_all <- list(
  "Model 0" = c(),
  "Model 1" = c("age_tte_der", "sex", "race_id_der"),
  "Model 2" = c("age_tte_der", "sex", "race_id_der",
                "bmi_cat_tri_der", "ever_smok_stat_der", "ever_ivdu_stat_der",
                "g9_hepatitis_c", "anemia_der", "a1_hiv_st", "respinfx_der"),
  "Model 3" = c("age_tte_der", "sex", "race_id_der",
                "bmi_cat_tri_der", "ever_smok_stat_der", "ever_ivdu_stat_der",
                "g9_hepatitis_c", "anemia_der", "a1_hiv_st",
                "post_old_gli_der", "dlco_stat_binary_gli_pft_1_der",
                "respinfx_der")
)

results_symptom_all_CAT_QR <- run_models_qr_cat(
  df = data_all,
  outcome = "symptom_score_1",
  preds = cat_vars,
  model_adjustments = model_adjustments_all,
  tau = 0.5
)

# =========================
# HIV-negative (Models 0–3)
# =========================
data_hiv0 <- prep_hiv0(file_path)
model_adjustments_hiv0 <- list(
  "Model 0" = c(),
  "Model 1" = c("age_tte_der", "sex", "race_id_der"),
  "Model 2" = c("age_tte_der", "sex", "race_id_der",
                "bmi_cat_tri_der", "ever_smok_stat_der",
                "ever_ivdu_stat_der", "anemia_der"),
  "Model 3" = c("age_tte_der", "sex", "race_id_der",
                "bmi_cat_tri_der", "ever_smok_stat_der", "ever_ivdu_stat_der",
                "anemia_der", "post_old_gli_der", "dlco_stat_binary_gli_pft_1_der")
)

results_symptom_hiv0_CAT_QR <- run_models_qr_cat(
  df = data_hiv0,
  outcome = "symptom_score_1",
  preds = cat_vars,
  model_adjustments = model_adjustments_hiv0,
  tau = 0.5
)

# =========================
# HIV-positive (Models 0–4)
# =========================
data_hiv1 <- prep_hiv1(file_path)
model_adjustments_hiv1 <- list(
  "Model 0" = c(),
  "Model 1" = c("age_tte_der", "sex", "race_id_der"),
  "Model 2" = c("age_tte_der", "sex", "race_id_der",
                "bmi_cat_tri_der", "ever_smok_stat_der", "ever_ivdu_stat_der",
                "g9_hepatitis_c", "anemia_der", "respinfx_der"),
  "Model 3" = c("age_tte_der", "sex", "race_id_der",
                "bmi_cat_tri_der", "ever_smok_stat_der", "ever_ivdu_stat_der",
                "g9_hepatitis_c", "anemia_der",
                "time_living_with_hiv_der", "cd4", "vl_detectable_der",
                "respinfx_der"),
  "Model 4" = c("age_tte_der", "sex", "race_id_der",
                "bmi_cat_tri_der", "ever_smok_stat_der", "ever_ivdu_stat_der",
                "g9_hepatitis_c", "anemia_der",
                "time_living_with_hiv_der", "cd4", "vl_detectable_der",
                "post_old_gli_der", "dlco_stat_binary_gli_pft_1_der",
                "respinfx_der")
)

results_symptom_hiv1_CAT_QR <- run_models_qr_cat(
  df = data_hiv1,
  outcome = "symptom_score_1",
  preds = cat_vars,
  model_adjustments = model_adjustments_hiv1,
  tau = 0.5
)

# --- Inspect ---
View(results_symptom_all_CAT_QR)
View(results_symptom_hiv0_CAT_QR)
View(results_symptom_hiv1_CAT_QR)
